@using OAuth20.Server.Controllers
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Localization

@inject IStringLocalizer<ManageController> Localizer
@inject IHtmlLocalizer<ManageController> HtmlLocalizer

@model OAuth20.Server.Models.ManageViewModels.TwoFactorAuthenticationViewModel
@{
    ViewData["Title"] = "Two-factor authentication";
    
}

<h4>@HtmlLocalizer["Two-factorauthentication"]</h4>
@if (Model.Is2faEnabled)
{
    if (Model.RecoveryCodesLeft == 0)
    {
        <div class="alert alert-danger">
            <strong>You have no recovery codes left.</strong>
            <p>You must <a asp-action="GenerateRecoveryCodes">generate a new set of recovery codes</a> before you can log in with a recovery code.</p>
        </div>
    }
    else if (Model.RecoveryCodesLeft == 1)
    {
        <div class="alert alert-danger">
            <strong>You have 1 recovery code left.</strong>
            <p>You can <a asp-action="GenerateRecoveryCodes">generate a new set of recovery codes</a>.</p>
        </div>
    }
    else if (Model.RecoveryCodesLeft <= 3)
    {
        <div class="alert alert-warning">
            <strong>You have @Model.RecoveryCodesLeft recovery codes left.</strong>
            <p>You should <a asp-action="GenerateRecoveryCodes">generate a new set of recovery codes</a>.</p>
        </div>
    }

    <a asp-action="Disable2faWarning" class="btn btn-default">Disable 2FA</a>
    <a asp-action="GenerateRecoveryCodesWarning" class="btn btn-default">Reset recovery codes</a>
}

<h5>@HtmlLocalizer["Authenticatorapp"]</h5>
@if (!Model.HasAuthenticator)
{
    <a asp-action="EnableAuthenticator" class="btn btn-default">@HtmlLocalizer["Addauthenticatorapp"]</a>
}
else
{
    <a asp-action="EnableAuthenticator" class="btn btn-default">@HtmlLocalizer["Configureauthenticatorapp"]</a>
    <a asp-action="ResetAuthenticatorWarning" class="btn btn-default">@HtmlLocalizer["Resetauthenticatorkey"]</a>
}

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
